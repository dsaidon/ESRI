// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(SQLContext))]
    partial class SQLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Dsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("Core.Entities.CallsTaskInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<double?>("ArrivalX")
                        .HasColumnType("float");

                    b.Property<double?>("ArrivalY")
                        .HasColumnType("float");

                    b.Property<string>("BatteryPicPath")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("BatteryPrice")
                        .HasColumnType("float");

                    b.Property<int?>("BatterySold")
                        .HasColumnType("int");

                    b.Property<int>("CallNo")
                        .HasColumnType("int");

                    b.Property<int?>("CarInvolved")
                        .HasColumnType("int");

                    b.Property<int?>("CarLocOffRoad")
                        .HasColumnType("int");

                    b.Property<int?>("CardCvv")
                        .HasColumnType("int");

                    b.Property<string>("CardHolderNm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CardHolderTz")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CardVldDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClosingFualtTp")
                        .HasColumnType("int");

                    b.Property<int?>("ClosingReasonCd")
                        .HasColumnType("int");

                    b.Property<string>("ClosingRem")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("ClosingTm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreditCardTp")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DrvLicenseVldEndDt1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DrvLicenseVldEndDt2")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ExecExtraPrice")
                        .HasColumnType("float");

                    b.Property<int>("ExecNo")
                        .HasColumnType("int");

                    b.Property<int?>("ExtraPriceExists")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceNo")
                        .HasColumnType("int");

                    b.Property<string>("InvolvedCarNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OfficeRem")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("OfficeRemExists")
                        .HasColumnType("int");

                    b.Property<string>("OnMyWayRem")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Pic1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic10")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic11")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic12")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic13")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic14")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic7")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic8")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pic9")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RecSts")
                        .HasColumnType("int");

                    b.Property<string>("SbcCarCrossroadLoc")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SbcCarLocation")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SignerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SignerTz")
                        .HasColumnType("int");

                    b.Property<int>("SrvCarNo")
                        .HasColumnType("int");

                    b.Property<int>("SrvManNo")
                        .HasColumnType("int");

                    b.Property<int>("SrvTp")
                        .HasColumnType("int");

                    b.Property<int?>("SubCarFuelSts")
                        .HasColumnType("int");

                    b.Property<int?>("SubCarKm")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubDrvBirthDt1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SubDrvBirthDt2")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubDrvIdCrtNo1")
                        .HasColumnType("int");

                    b.Property<int?>("SubDrvIdCrtNo2")
                        .HasColumnType("int");

                    b.Property<int?>("SubDrvLicenseNo1")
                        .HasColumnType("int");

                    b.Property<int?>("SubDrvLicenseNo2")
                        .HasColumnType("int");

                    b.Property<string>("SubDrvNm1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubDrvNm2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TowingAccident")
                        .HasColumnType("int");

                    b.Property<int?>("WebLetRecId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CallsTaskInfo");
                });

            modelBuilder.Entity("Core.Entities.ClosingReason", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Dsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ClosingReason");
                });

            modelBuilder.Entity("Core.Entities.CreadirCardTp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CardIdentifire")
                        .HasColumnType("int");

                    b.Property<string>("CreditCmpNote")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Dsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShortDsc")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("VisaNoLength")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CreadirCardTp");
                });

            modelBuilder.Entity("Core.Entities.FaultTp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Dsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FaultTp");
                });

            modelBuilder.Entity("Core.Entities.FleetCarRequest", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CallCustomer")
                        .HasColumnType("int");

                    b.Property<int?>("CallNo")
                        .HasColumnType("int");

                    b.Property<string>("CallReceiverEmpNm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CltGivenExecTm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateTm")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DestAreaDsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DestAreaId")
                        .HasColumnType("int");

                    b.Property<double?>("DestX")
                        .HasColumnType("float");

                    b.Property<double?>("DestY")
                        .HasColumnType("float");

                    b.Property<int?>("DipatcherEmpNo")
                        .HasColumnType("int");

                    b.Property<string>("DispatcherEmpNm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DrvLicenseReceiptDt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DrvLicenseVldEndDt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExecApxTm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExecNo")
                        .HasColumnType("int");

                    b.Property<double?>("ExecPrice")
                        .HasColumnType("float");

                    b.Property<string>("ExecReminderRem")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("ExecSeq")
                        .HasColumnType("int");

                    b.Property<int?>("ExternalOprr")
                        .HasColumnType("int");

                    b.Property<string>("FaultTpDsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GarageNm")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KeyLocDsc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OfficeRem")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SbcCarAreaDsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SbcCarAreaId")
                        .HasColumnType("int");

                    b.Property<string>("SbcCarInfo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SbcCarLocDsc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SbcCarNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SbcCarTpDsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SbcCmpNm")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SbcContactPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("SbcIdCrtNo")
                        .HasColumnType("int");

                    b.Property<string>("SbcMobilePhoneNo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SbcNm")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ShowCallInfo")
                        .HasColumnType("int");

                    b.Property<string>("SrcAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("SrcSrvId")
                        .HasColumnType("int");

                    b.Property<double?>("SrcX")
                        .HasColumnType("float");

                    b.Property<double?>("SrcY")
                        .HasColumnType("float");

                    b.Property<int>("SrvCarNo")
                        .HasColumnType("int");

                    b.Property<int?>("SrvManNo")
                        .HasColumnType("int");

                    b.Property<string>("SrvTpDsc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SrvTpId")
                        .HasColumnType("int");

                    b.Property<int?>("Sts")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubAdmissionTm")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubCar")
                        .HasColumnType("int");

                    b.Property<int?>("SubContractNo")
                        .HasColumnType("int");

                    b.Property<double?>("SubDailyRentPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("SubDrvBirthDt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubDrvIdCrtNo")
                        .HasColumnType("int");

                    b.Property<int?>("SubDrvLicenseNo")
                        .HasColumnType("int");

                    b.Property<string>("SubDrvNm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubReturnDestAddrr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("SubReturnTm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateNotification")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("WaitNm")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("DestAreaId");

                    b.HasIndex("SbcCarAreaId");

                    b.HasIndex("SrcSrvId");

                    b.HasIndex("SrvTpId");

                    b.ToTable("FleetCarRequest");
                });

            modelBuilder.Entity("Core.Entities.Fnc", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Dsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Fnc");
                });

            modelBuilder.Entity("Core.Entities.LockedIp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("lockedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LockedIps");
                });

            modelBuilder.Entity("Core.Entities.LockedSrvMan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsSupplier")
                        .HasColumnType("bit");

                    b.Property<string>("SrvManNM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("lockedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("lockedSrvManNo")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("LockedSrvMans");
                });

            modelBuilder.Entity("Core.Entities.LoginLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SrvManName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SrvManNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ip")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("isSupplier")
                        .HasColumnType("bit");

                    b.Property<DateTime>("lastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("phoneNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("sessionId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("smsCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("smsCodeCounter")
                        .HasColumnType("int");

                    b.Property<int?>("smsCodeRetriesCounter")
                        .HasColumnType("int");

                    b.Property<DateTime?>("smsCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LoginLogs");
                });

            modelBuilder.Entity("Core.Entities.RequestStsTp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Dsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RequestStsTp");
                });

            modelBuilder.Entity("Core.Entities.SiteParam", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("decimalValue")
                        .HasColumnType("float");

                    b.Property<string>("hebrewName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("intValue")
                        .HasColumnType("int");

                    b.Property<string>("stringValue")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SiteParams");
                });

            modelBuilder.Entity("Core.Entities.SrcSrv", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Dsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SrcSrv");
                });

            modelBuilder.Entity("Core.Entities.SrvMan", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("FirstNm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastNm")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("SrvManTpId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SrvManTpId");

                    b.ToTable("SrvMan");
                });

            modelBuilder.Entity("Core.Entities.SrvManAttn", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("RecSts")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShiftDt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ShiftX")
                        .HasColumnType("float");

                    b.Property<double?>("ShiftY")
                        .HasColumnType("float");

                    b.Property<float?>("SrvCarKm")
                        .HasColumnType("real");

                    b.Property<int>("SrvCarNo")
                        .HasColumnType("int");

                    b.Property<int>("SrvManNo")
                        .HasColumnType("int");

                    b.Property<int>("SrvManShiftTpId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SrvManShiftTpId");

                    b.ToTable("SrvManAttn");
                });

            modelBuilder.Entity("Core.Entities.SrvManAttnTp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Dsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SrvManAttnTp");
                });

            modelBuilder.Entity("Core.Entities.SrvManClaim", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ClaimId");

                    b.ToTable("UserClaim", "Security");
                });

            modelBuilder.Entity("Core.Entities.SrvManExecSts", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Call_No")
                        .HasColumnType("int");

                    b.Property<int>("Exec_No")
                        .HasColumnType("int");

                    b.Property<int>("External_Oprr")
                        .HasColumnType("int");

                    b.Property<int>("Rec_Sts")
                        .HasColumnType("int");

                    b.Property<DateTime>("Rep_Tm")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Rep_X")
                        .HasColumnType("float");

                    b.Property<double?>("Rep_Y")
                        .HasColumnType("float");

                    b.Property<int>("SrvManExecStsTpId")
                        .HasColumnType("int");

                    b.Property<int>("Srv_Car_No")
                        .HasColumnType("int");

                    b.Property<int>("Srv_Man_No")
                        .HasColumnType("int");

                    b.Property<int>("Web_Let_Rec_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SrvManExecStsTpId");

                    b.ToTable("SrvManExecSts");
                });

            modelBuilder.Entity("Core.Entities.SrvManExecStsTp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Dsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SrvManExecStsTp");
                });

            modelBuilder.Entity("Core.Entities.SrvManShiftTp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Dsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SrvManShiftTp");
                });

            modelBuilder.Entity("Core.Entities.SrvManTp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Dsc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SrvManTp");
                });

            modelBuilder.Entity("Core.Entities.SrvTp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ActivityTp")
                        .HasColumnType("int");

                    b.Property<string>("Dsc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SrcSrvCd")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SrvTp");
                });

            modelBuilder.Entity("Core.Entities.XYLocation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CallNo")
                        .HasColumnType("int");

                    b.Property<int>("ExecNo")
                        .HasColumnType("int");

                    b.Property<double>("LocX")
                        .HasColumnType("float");

                    b.Property<double>("LocY")
                        .HasColumnType("float");

                    b.Property<int>("RecSts")
                        .HasColumnType("int");

                    b.Property<DateTime>("RepTm")
                        .HasColumnType("datetime2");

                    b.Property<int>("SrvCarNo")
                        .HasColumnType("int");

                    b.Property<int>("SrvManNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("XYLocation");
                });

            modelBuilder.Entity("Core.Entities.FleetCarRequest", b =>
                {
                    b.HasOne("Core.Entities.Area", "AreaDest")
                        .WithMany()
                        .HasForeignKey("DestAreaId");

                    b.HasOne("Core.Entities.Area", "AreaSrc")
                        .WithMany()
                        .HasForeignKey("SbcCarAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.SrcSrv", "SrcSrv")
                        .WithMany()
                        .HasForeignKey("SrcSrvId");

                    b.HasOne("Core.Entities.SrvTp", "SrvTp")
                        .WithMany()
                        .HasForeignKey("SrvTpId");

                    b.Navigation("AreaDest");

                    b.Navigation("AreaSrc");

                    b.Navigation("SrcSrv");

                    b.Navigation("SrvTp");
                });

            modelBuilder.Entity("Core.Entities.SrvMan", b =>
                {
                    b.HasOne("Core.Entities.SrvManTp", "SrvManTp")
                        .WithMany()
                        .HasForeignKey("SrvManTpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SrvManTp");
                });

            modelBuilder.Entity("Core.Entities.SrvManAttn", b =>
                {
                    b.HasOne("Core.Entities.SrvManShiftTp", "SrvManShiftTp")
                        .WithMany()
                        .HasForeignKey("SrvManShiftTpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SrvManShiftTp");
                });

            modelBuilder.Entity("Core.Entities.SrvManExecSts", b =>
                {
                    b.HasOne("Core.Entities.SrvManExecStsTp", "SrvManExecStsTp")
                        .WithMany()
                        .HasForeignKey("SrvManExecStsTpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SrvManExecStsTp");
                });
#pragma warning restore 612, 618
        }
    }
}
